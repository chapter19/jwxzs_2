# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2019-06-08 15:57
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lessons', '0014_majorlesson_limit_lesson_minimum_credit'),
        ('disks', '0001_initial'),
        ('semesters', '0003_nextsemester'),
        ('users', '0019_auto_20190509_1707'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K')], default='A', max_length=2, verbose_name='选项')),
                ('content', models.CharField(default='', max_length=100, verbose_name='选项内容')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '选项',
                'verbose_name_plural': '选项',
                'ordering': ('choice',),
            },
        ),
        migrations.CreateModel(
            name='ChoiceTrueAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choice_true_answer', to='homeworks.Choice', verbose_name='选项')),
            ],
            options={
                'verbose_name': '选择题正确答案',
                'verbose_name_plural': '选择题正确答案',
                'ordering': ('choice',),
            },
        ),
        migrations.CreateModel(
            name='DaiMaAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daima_type', models.CharField(choices=[('python', 'Python'), ('c_cpp', 'C'), ('c_cpp', 'C++'), ('php', 'Php'), ('java', 'Java'), ('csharp', 'C#'), ('r', 'R'), ('javascript', 'JavaScript'), ('html', 'Html'), ('css', 'Css'), ('vbscript', 'VB'), ('jsp', 'jsp'), ('sql', 'SQL'), ('xml', 'XML'), ('golang', 'Go'), ('mysql', 'MySQL'), ('sh', 'shell'), ('其他', '其他')], max_length=12, verbose_name='编程语言')),
                ('answer', models.TextField(verbose_name='代码答案')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '代码参考答案',
                'verbose_name_plural': '代码参考答案',
            },
        ),
        migrations.CreateModel(
            name='DaiMaFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daima_type', models.CharField(choices=[('python', 'Python'), ('c', 'C'), ('cpp', 'C++'), ('php', 'Php'), ('java', 'Java'), ('csharp', 'C#'), ('r', 'R'), ('javascript', 'JavaScript'), ('Html', 'Html'), ('css', 'Css'), ('vbscript', 'VB'), ('jsp', 'jsp'), ('sql', 'SQL'), ('xml', 'XML'), ('golang', 'Go'), ('mysql', 'MySQL'), ('sh', 'shell'), ('不限', '不限')], help_text='编程语言', max_length=12, verbose_name='编程语言')),
                ('name', models.CharField(help_text='代码文件名', max_length=50, verbose_name='代码文件名')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, help_text='创建时间', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间', verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '代码题代码文件',
                'verbose_name_plural': '代码题代码文件',
            },
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=50, verbose_name='标题')),
                ('describe', models.TextField(default='', verbose_name='作业描述')),
                ('timeout', models.IntegerField(blank=True, null=True, verbose_name='完成时间限制（分钟）')),
                ('limit_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='提交时间限制')),
                ('question_counter', models.IntegerField(default=0, verbose_name='题目量（题）')),
                ('total_score', models.FloatField(default=0.0, verbose_name='总分')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('file', models.ManyToManyField(related_name='homework', to='disks.File', verbose_name='作业文件')),
            ],
            options={
                'verbose_name': '作业',
                'verbose_name_plural': '作业',
            },
        ),
        migrations.CreateModel(
            name='HomeworkScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.FloatField(default=0.0, verbose_name='总得分')),
                ('if_submit', models.BooleanField(default=False, verbose_name='是否提交作业')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('if_no_answer', models.BooleanField(default=False, help_text='是否未答题', verbose_name='是否未答题')),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_homework_score', to='homeworks.Homework', verbose_name='作业')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_homework_score', to='users.Student', verbose_name='学生')),
            ],
            options={
                'verbose_name': '单次作业总得分',
                'verbose_name_plural': '单次作业总得分',
            },
        ),
        migrations.CreateModel(
            name='JianDaAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(blank=True, null=True, verbose_name='文本答案')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '简答题参考答案',
                'verbose_name_plural': '简答题参考答案',
            },
        ),
        migrations.CreateModel(
            name='KnowledgeLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50, verbose_name='知识点标签名')),
                ('unit_count', models.IntegerField(default=0, verbose_name='所包含知识点的章节数')),
                ('lesson_count', models.IntegerField(default=0, verbose_name='所包含知识点的课时')),
                ('homework_count', models.IntegerField(default=0, verbose_name='所包含知识点的作业')),
                ('question_count', models.IntegerField(default=0, verbose_name='所包含知识点的题目')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_create_knowledge_label', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='knowledge_label', to='lessons.Lesson', verbose_name='课程')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='knowledge_label', to='semesters.Semester', verbose_name='学期')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='knowledge_label', to='users.Teacher', verbose_name='教师')),
            ],
            options={
                'verbose_name': '知识点标签',
                'verbose_name_plural': '知识点标签',
            },
        ),
        migrations.CreateModel(
            name='LessonPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateField(auto_now_add=True, verbose_name='上课时间')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='课时名')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='课时说明')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('lesson_file', models.ManyToManyField(related_name='lesson_period', to='disks.File', verbose_name='课时课件')),
                ('schedule_lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_period', to='lessons.ScheduleLesson', verbose_name='课程表课程班级')),
            ],
            options={
                'verbose_name': '课时',
                'verbose_name_plural': '课时',
            },
        ),
        migrations.CreateModel(
            name='OtherAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True, null=True, verbose_name='文本答案')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('image_count', models.IntegerField(default=0, verbose_name='其他题答案照片数')),
                ('file', models.ManyToManyField(related_name='other_answer', to='disks.File', verbose_name='文件')),
            ],
            options={
                'verbose_name': '其他题参考答案',
                'verbose_name_plural': '其他题参考答案',
            },
        ),
        migrations.CreateModel(
            name='OtherAnswerImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=1, verbose_name='编号')),
                ('image', models.ImageField(upload_to='student_other_answer_imgs/%Y/%m/%d/', verbose_name='图片')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('other_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_answer_image', to='homeworks.OtherAnswer', verbose_name='其他题答案')),
            ],
            options={
                'verbose_name': '其他题参考答案图片',
                'verbose_name_plural': '其他题参考答案图片',
                'ordering': ('number',),
            },
        ),
        migrations.CreateModel(
            name='PanDuanTrueAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.BooleanField(default=False, verbose_name='正确与否（答案）')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '判断题正确答案',
                'verbose_name_plural': '判断题正确答案',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('DanXuan', '单选题'), ('PanDuan', '判断题'), ('DuoXuan', '多选题'), ('TianKong', '填空题'), ('JianDa', '简答题'), ('DaiMa', '代码题'), ('QiTa', '其他题')], max_length=12, verbose_name='题目类型')),
                ('number', models.IntegerField(default=1, verbose_name='编号')),
                ('question', models.TextField(default='', verbose_name='题目')),
                ('analysis', models.TextField(blank=True, null=True, verbose_name='解析')),
                ('score', models.FloatField(default=0.0, verbose_name='分值')),
                ('image_count', models.IntegerField(default=0, verbose_name='图片数量')),
                ('if_auto_correct', models.BooleanField(default=False, verbose_name='是否自动批改')),
                ('if_answer_update', models.BooleanField(default=False, verbose_name='学生是否可以修改答案')),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homeworks.Homework', verbose_name='作业')),
                ('knowledge_labels', models.ManyToManyField(related_name='question', to='homeworks.KnowledgeLabel', verbose_name='知识点标签')),
            ],
            options={
                'verbose_name': '题目',
                'verbose_name_plural': '题目',
            },
        ),
        migrations.CreateModel(
            name='QuestionImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=1, verbose_name='编号')),
                ('image', models.ImageField(upload_to='question/%Y/%m/%d/', verbose_name='图片')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image', to='homeworks.Question', verbose_name='题目')),
            ],
            options={
                'verbose_name': '题目图片',
                'verbose_name_plural': '题目图片',
                'ordering': ('number',),
            },
        ),
        migrations.CreateModel(
            name='QuestionScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(default=0.0, verbose_name='成绩')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('if_no_answer', models.BooleanField(default=False, help_text='是否未答题', verbose_name='是否未答题')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_score', to='homeworks.Question', verbose_name='题目')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_score', to='users.Student', verbose_name='学生')),
            ],
            options={
                'verbose_name': '题目得分',
                'verbose_name_plural': '题目得分',
            },
        ),
        migrations.CreateModel(
            name='StudentChoiceAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answer', to='homeworks.Choice', verbose_name='选项')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='danxuan_true_answer', to='homeworks.Question', verbose_name='问题')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_choice_answer', to='users.Student', verbose_name='学生')),
            ],
            options={
                'verbose_name': '选择题学生答案',
                'verbose_name_plural': '选择题学生答案',
                'ordering': ('choice',),
            },
        ),
        migrations.CreateModel(
            name='StudentDaiMaAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daima_type', models.CharField(choices=[('python', 'Python'), ('c', 'C'), ('cpp', 'C++'), ('php', 'Php'), ('java', 'Java'), ('csharp', 'C#'), ('r', 'R'), ('javascript', 'JavaScript'), ('Html', 'Html'), ('css', 'Css'), ('vbscript', 'VB'), ('jsp', 'jsp'), ('sql', 'SQL'), ('xml', 'XML'), ('golang', 'Go'), ('mysql', 'MySQL'), ('sh', 'shell'), ('其他', '其他')], max_length=12, verbose_name='编程语言')),
                ('answer', models.TextField(blank=True, null=True, verbose_name='代码答案')),
                ('if_auto_submit', models.BooleanField(default=False, verbose_name='是否自动提交')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('daima_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_daima_answer', to='homeworks.DaiMaFile', verbose_name='对应代码文件')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_daima_answer', to='users.Student', verbose_name='学生')),
            ],
            options={
                'verbose_name': '学生代码答案',
                'verbose_name_plural': '学生代码答案',
            },
        ),
        migrations.CreateModel(
            name='StudentJianDaAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(blank=True, null=True, verbose_name='文本答案')),
                ('if_auto_submit', models.BooleanField(default=False, verbose_name='是否自动提交')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_jianda_answer', to='homeworks.Question', verbose_name='题目')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_jianda_answer', to='users.Student', verbose_name='学生')),
            ],
            options={
                'verbose_name': '学生简答题答案',
                'verbose_name_plural': '学生简答题答案',
            },
        ),
        migrations.CreateModel(
            name='StudentOtherAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True, null=True, verbose_name='文本答案')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('image_count', models.IntegerField(default=0, verbose_name='图片数量')),
                ('file', models.ManyToManyField(related_name='student_other_answer', to='disks.File', verbose_name='文件')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_other_answer', to='homeworks.Question', verbose_name='题目')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_other_answer', to='users.Student', verbose_name='学生')),
            ],
            options={
                'verbose_name': '学生其他题答案',
                'verbose_name_plural': '学生其他题答案',
            },
        ),
        migrations.CreateModel(
            name='StudentOtherAnswerImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=1, verbose_name='编号')),
                ('image', models.ImageField(upload_to='student_other_answer_imgs/%Y/%m/%d/', verbose_name='图片')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('student_other_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_other_answer_image', to='homeworks.StudentOtherAnswer', verbose_name='学生其他题答案')),
            ],
            options={
                'verbose_name': '学生其他题答案图片',
                'verbose_name_plural': '学生其他题答案图片',
            },
        ),
        migrations.CreateModel(
            name='StudentPanDuanAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.BooleanField(default=False, verbose_name='正确与否（答案）')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_panduan_answer', to='homeworks.Question', verbose_name='题目')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_panduan_answer', to='users.Student', verbose_name='学生用户')),
            ],
            options={
                'verbose_name': '判断题学生答案',
                'verbose_name_plural': '判断题学生答案',
            },
        ),
        migrations.CreateModel(
            name='StudentTianKongAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=50, verbose_name='答案')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '填空题空学生答案',
                'verbose_name_plural': '填空题空学生答案',
            },
        ),
        migrations.CreateModel(
            name='TianKongBlank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=1, verbose_name='编号')),
                ('score', models.FloatField(default=0.5, verbose_name='该空的分值')),
                ('if_other_answer', models.BooleanField(default=False, verbose_name='是否有其他答案')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tiankong_blank', to='homeworks.Question', verbose_name='题目')),
            ],
            options={
                'verbose_name': '填空题空',
                'verbose_name_plural': '填空题空',
                'ordering': ('number',),
            },
        ),
        migrations.CreateModel(
            name='TianKongOtherAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_answer', models.CharField(max_length=50, verbose_name='其他答案')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('blank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tiankong_other_answer', to='homeworks.TianKongBlank', verbose_name='填空')),
            ],
            options={
                'verbose_name': '填空题空其他答案',
                'verbose_name_plural': '填空题空其他答案',
            },
        ),
        migrations.CreateModel(
            name='TianKongTrueAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=50, verbose_name='答案')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('blank', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tiankong_true_answer', to='homeworks.TianKongBlank')),
            ],
            options={
                'verbose_name': '填空题空正确答案',
                'verbose_name_plural': '填空题空正确答案',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.IntegerField(default=1, verbose_name='第几章节')),
                ('name', models.CharField(max_length=50, verbose_name='章节名')),
                ('info', models.CharField(blank=True, help_text='简介', max_length=200, null=True, verbose_name='简介')),
                ('unit_type', models.IntegerField(choices=[(1, '章'), (2, '节'), (3, '子节')], verbose_name='章节类别')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_create_unit', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('knowledge_labels', models.ManyToManyField(related_name='unit', to='homeworks.KnowledgeLabel', verbose_name='知识点标签')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit', to='lessons.Lesson', verbose_name='课程')),
                ('lesson_file', models.ManyToManyField(related_name='unit', to='disks.File', verbose_name='章节课件')),
                ('parent_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_unit', to='homeworks.Unit', verbose_name='父章节')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit', to='semesters.Semester', verbose_name='学期')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit', to='users.Teacher', verbose_name='教师')),
            ],
            options={
                'verbose_name': '章节',
                'verbose_name_plural': '章节',
            },
        ),
        migrations.AddField(
            model_name='studenttiankonganswer',
            name='blank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_tiankong_answer', to='homeworks.TianKongBlank', verbose_name='填空题空'),
        ),
        migrations.AddField(
            model_name='studenttiankonganswer',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_tiankong_answer', to='users.Student', verbose_name='学生'),
        ),
        migrations.AddField(
            model_name='panduantrueanswer',
            name='question',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='panduan_true_answer', to='homeworks.Question', verbose_name='题目'),
        ),
        migrations.AddField(
            model_name='otheranswer',
            name='question',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='other_answer', to='homeworks.Question', verbose_name='题目'),
        ),
        migrations.AddField(
            model_name='lessonperiod',
            name='unit',
            field=models.ManyToManyField(related_name='lesson_period', to='homeworks.Unit', verbose_name='章节'),
        ),
        migrations.AddField(
            model_name='jiandaanswer',
            name='question',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='jianda_answer', to='homeworks.Question', verbose_name='题目'),
        ),
        migrations.AddField(
            model_name='homework',
            name='lesson_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homework', to='homeworks.LessonPeriod', verbose_name='课时'),
        ),
        migrations.AddField(
            model_name='homework',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_created_homework', to=settings.AUTH_USER_MODEL, verbose_name='作业创建者'),
        ),
        migrations.AddField(
            model_name='daimafile',
            name='question',
            field=models.ForeignKey(help_text='题目', on_delete=django.db.models.deletion.CASCADE, to='homeworks.Question', verbose_name='题目'),
        ),
        migrations.AddField(
            model_name='daimaanswer',
            name='daima_file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daima_answer', to='homeworks.DaiMaFile', verbose_name='对应代码文件'),
        ),
        migrations.AddField(
            model_name='choicetrueanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choice_true_answer', to='homeworks.Question', verbose_name='问题'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choice', to='homeworks.Question', verbose_name='题目'),
        ),
        migrations.AlterUniqueTogether(
            name='unit',
            unique_together=set([('num', 'semester', 'lesson', 'teacher', 'unit_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='tiankongotheranswer',
            unique_together=set([('other_answer', 'blank')]),
        ),
        migrations.AlterUniqueTogether(
            name='tiankongblank',
            unique_together=set([('question', 'number')]),
        ),
        migrations.AlterUniqueTogether(
            name='studenttiankonganswer',
            unique_together=set([('student', 'blank')]),
        ),
        migrations.AlterUniqueTogether(
            name='studentpanduananswer',
            unique_together=set([('student', 'question')]),
        ),
        migrations.AlterUniqueTogether(
            name='studentotheranswerimage',
            unique_together=set([('number', 'student_other_answer')]),
        ),
        migrations.AlterUniqueTogether(
            name='studentotheranswer',
            unique_together=set([('question', 'student')]),
        ),
        migrations.AlterUniqueTogether(
            name='questionscore',
            unique_together=set([('student', 'question')]),
        ),
        migrations.AlterUniqueTogether(
            name='questionimage',
            unique_together=set([('question', 'number')]),
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together=set([('homework', 'number')]),
        ),
        migrations.AlterUniqueTogether(
            name='otheranswerimage',
            unique_together=set([('number', 'other_answer')]),
        ),
        migrations.AlterUniqueTogether(
            name='knowledgelabel',
            unique_together=set([('name', 'semester', 'lesson', 'teacher')]),
        ),
        migrations.AlterUniqueTogether(
            name='homeworkscore',
            unique_together=set([('student', 'homework')]),
        ),
        migrations.AlterUniqueTogether(
            name='homework',
            unique_together=set([('lesson_period', 'title')]),
        ),
        migrations.AlterUniqueTogether(
            name='daimafile',
            unique_together=set([('name', 'question')]),
        ),
        migrations.AlterUniqueTogether(
            name='choice',
            unique_together=set([('question', 'choice')]),
        ),
    ]
